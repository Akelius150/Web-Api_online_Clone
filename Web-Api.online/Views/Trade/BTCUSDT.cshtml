@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    ViewData["Title"] = "Web-Api.online";
}

<div class="text-center">
    <h1 class="display-4">BTC - USDT</h1>
</div>

<div class="row">
    <div class="col-12">
        <hr />
    </div>
</div>

<div class="row">
    <div class="col-md-4">
        <div class="orderbook-wrap">
            <div class="orderbook">
                <div class="orderbook-header"></div>
                <div class="orderbook-tbheader">
                    <div class="orderbook-tbheader-col">Price(USDT)</div>
                    <div class="orderbook-tbheader-col">Amount(BTC)</div>
                    <div class="orderbook-tbheader-col">Total</div>
                </div>
                <div class="orderbook-container">
                    <div class="orderbook-list orderbook-list-asks orderbook-asks">
                    </div>
                    <div class="orderbook-ticker">
                        <div class="orderbook-ticker-status status-buy">
                            <span>0</span>
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" class="arrow-icon" style="transform: rotate(180deg);"><path d="M5 13.47l1.41-1.41 5.1 5.1V3h1.99v14.15l5.09-5.09L20 13.47l-7.5 7.5-7.5-7.5z" fill="currentColor"></path></svg>
                        </div>
                        <div class="orderbook-ticker-markprice">$6.24</div>
                        <a href="#" target="_blank" class="orderbook-ticker-more">
                            Больше
                            <svg width="16" height="12" viewBox="0 0 16 12" fill="none" xmlns="http://www.w3.org/2000/svg"><rect y="7" width="2.66667" height="5" fill="#00C582"></rect><rect x="4.44446" y="4" width="2.66667" height="8" fill="#00C582"></rect><rect x="8.88892" y="2" width="2.66667" height="10" fill="#00C582"></rect><rect x="13.3333" width="2.66667" height="12" fill="#00C582"></rect></svg>
                        </a>
                    </div>
                </div>
            </div>
            <div class="orderbook">
                <div class="orderbook-container">
                    <div class="orderbook-list orderbook-list-bids orderbook-bids">
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="text-wrap">
            @if (SignInManager.IsSignedIn(User))
            {
                <ul>
                    <li class="nav-item">
                        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity.Name!</a>
                    </li>
                    <li class="nav-item">
                        BTC balance: @Model.BtcWallet.Value Address: @Model.BtcWallet.Address
                    </li>
                    <li class="nav-item">
                        USDT balance: @Model.UsdtWallet.Value Address: @Model.UsdtWallet.Address
                    </li>
                </ul>

                <div class="container">
                    <div class="row">&nbsp;</div>
                    <div class="row">
                        <div class="col-2">Count</div>
                        <div class="col-4"><input type="text" id="amountInput" /></div>
                    </div>
                    <div class="row">
                        <div class="col-2">Price</div>
                        <div class="col-4"><input type="text" id="priceInput" /></div>
                    </div>
                    <div class="row">&nbsp;</div>
                    <div class="row">
                        <div class="col-6">
                            <input type="button" id="buyButton" value="Buy" />
                            <input type="button" id="sellButton" value="Sell" />
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
    <div class="col-md-4">
        <div class="orderbook">
            <div class="orderbook-header">
                <div class="orderbook-header-col">Market Trades</div>
            </div>
            <div class="orderbook-tbheader">
                <div class="orderbook-tbheader-col">Price(USDT)</div>
                <div class="orderbook-tbheader-col">Amount(BTC)</div>
                <div class="orderbook-tbheader-col">Time</div>
            </div>
            <div class="orderbook-container">
                <div class="orderbook-list orderbook-list-bids">
                </div>
            </div>
        </div>
        <div class="orderbook">
            <div class="orderbook-header">
                <div class="orderbook-header-col">Open Trades</div>
            </div>
            <div class="orderbook-tbheader">
                <div class="orderbook-tbheader-col">Price(USDT)</div>
                <div class="orderbook-tbheader-col">Amount(BTC)</div>
                <div class="orderbook-tbheader-col">Time</div>
                <div class="orderbook-tbheader-col"></div>
            </div>
            <div class="orderbook-container">
                <div class="orderbook-list orderbook-list-bids">
                    <div class="orderbook-row">
                        <div class="orderbook-col">452.518</div>
                        <div class="orderbook-col">8132.234</div>
                        <div class="orderbook-col">15.08.21 1:46:01</div>
                        <div class="orderbook-col">
                            <a href="/trade/cancelorder/1">Cancel</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="https://code.jquery.com/jquery-3.6.0.js" integrity="sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk=" crossorigin="anonymous"></script>
<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script src="~/js/site.js"></script>
<script src="~/js/btcusdthub.js?2"></script>

<script>
    var model = @Html.Raw(Json.Serialize(Model));
    var userOpenOrders = model.userOpenOrders;
    var buyOpenOrders = model.buyOrderBook
    var sellOpenOrders = model.sellOrderBook
    var marketTrades = model.marketTrades

    var currentMarketTradeDoc = document.getElementsByClassName("orderbook-ticker-status")[0];
    currentMarketTradeDoc.children[0].innerHTML = marketTrades[0].exposedPrice;

    currentMarketTradeDoc.classList.remove('status-buy');
    currentMarketTradeDoc.classList.remove('status-sell');
    currentMarketTradeDoc.classList.add((marketTrades[0].isBuy ? 'status-buy' : 'status-sell'));

    currentMarketTradeDoc.children[1].style.transform = (marketTrades[0].isBuy ? 'rotate(180deg)' : 'rotate(360deg)');

    loadNewOrderBook(buyOpenOrders, true, true, false, false);
    loadNewOrderBook(sellOpenOrders, true, false, false, false);
    loadNewOrderBook(marketTrades, true, false, true, false);
    loadNewOrderBook(userOpenOrders, true, false, false, true);
</script>